# '===============Работа с файлами======================'

# file = open('test.txt') - 
# try:
#     #open открывает файл для чтения 
#     file = open('file.txt')


# output = 


# # самостоятельный разбор

# open('makers.txt', 'r') - передается 2 аргумента
# первый это имя файла или имя с адресом
# второй аргумент это режим в котором открывается файл
# есть несколько режимов это:
# 'r' - режим чтения open('makers.txt', 'r') - он может только считывать данные
# 'r+' - read + write


# 'w' - режим записи open('makers.txt', 'w') - если файл открыт в режиме записи, то в него 
# можно записывать данные, а считывать нельзя
# 'w+' - read + write

# 'a' - режим дозаписи open('makers.txt', 'a') - если не нужно удалять файл, нужно что-то дозаписать,
# то открываем в формате append
# 'a+ ' append + read

# 'x' - позволяет записывать данные, отличается от w, что если в том случае, если файла нет
# файл появляется и данные записываются

# 'b' - bynary, открытие файла в двоичном режиме

# 't' - text, открытие файла в текстовом режиме

 

# Если при вызове open() второй аргумент не указан, то файл открывается в режиме чтения 'r'.
# Функция open() возвращает объект файлового типа


# пример:
# file1 = open('makers.txt', 'r')к примеру, мы ранее создали файл 'makers.txt'
# data = file1.read() - считывает все строки, всё содержимое файла
# print(data) 

# file1 = open('makers.txt', 'r')к примеру, мы ранее создали файл 'makers.txt'
# data = file1.readline() - считывает построчно (только первую строку)
# print(data) 


# file1 = open('makers.txt', 'r')к примеру, мы ранее создали файл 'makers.txt'
# data = file1.readlines() - считывает сразу все строки и помещает их в список 
# print(data) 

# записать текст в пустой файл
# запись выполняется с помощью write и writelines

# file2 = open('bootcamp.txt', 'w')
# print(file2.write('This is Makers Bootcamp\n')) #в метод write мы передаем строку, которую хотим записать в 
# # bootcamp.txt и возвращает нам этот метод кол-во символов
# strings = ['One\n', 'Two\n', 'Three\n'] 
# file2.writelines(strings) #метод writelines внутри принимает структуру данных.
# В данном случае это список - этот метод ничего не возвращает

# Закрытие файла 
# когда работа с файлом окончена мы обращаемся с закрытию файла, очень важно, так как защищаем данные
# пример 
# file2.close()
# print(file2.closed) - чтобы проверить точно ли файл закрыт, он возвращает True или False



# # Каждый модуль содержит коллекцию функций и классов, 
# # предназначенных для решения задач  из определенной области.
# к примеру:
# модуль random позволяет генерировать рандомные числа

# модуль math - позволяет работать с числами

# модуль datetime  - содержаться данные для работы с датами и временем


# file1 = open('makers.txt', 'r')
# data = file1.read() - в скобки можем передать число(кол-во символов, которые хотим получить)
# print(type(data))


# Метод seek() - передает курсор на ту позицию, куда мы его поставили

# пример:
# file1 = open('makers.txt', 'r')
# print(file1.read(10))
# file1.seek(0)
# print(file1.read(5))

# метод readline() - считывает построчно
# пример:
# file1 = open('makers.txt', 'r')
# print(file1.readline())
# print(file1.readline())

# Так же, можно пройтись циклом, чтобы всё не readline-нить
# file1 = open('makers.txt', 'r')
# for line in file1:
#     print(line)

# Метод readlines()

# пример:
file1 = open('makers.txt', 'r')
list_ = file1.readlines()
print(list_)


